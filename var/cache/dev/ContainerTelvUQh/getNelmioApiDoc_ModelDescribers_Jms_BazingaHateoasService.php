<?php

namespace ContainerTelvUQh;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getNelmioApiDoc_ModelDescribers_Jms_BazingaHateoasService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'nelmio_api_doc.model_describers.jms.bazinga_hateoas' shared service.
     *
     * @return \Nelmio\ApiDocBundle\ModelDescriber\BazingaHateoasModelDescriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/nelmio/api-doc-bundle/ModelDescriber/ModelDescriberInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/nelmio/api-doc-bundle/Describer/ModelRegistryAwareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/nelmio/api-doc-bundle/Describer/ModelRegistryAwareTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/nelmio/api-doc-bundle/ModelDescriber/BazingaHateoasModelDescriber.php';
        include_once \dirname(__DIR__, 4).'/vendor/nelmio/api-doc-bundle/ModelDescriber/JMSModelDescriber.php';
        include_once \dirname(__DIR__, 4).'/vendor/jms/serializer/src/ContextFactory/SerializationContextFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/jms/serializer/src/ContextFactory/DeserializationContextFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/jms/serializer-bundle/ContextFactory/ConfiguredContextFactory.php';

        return $container->privates['nelmio_api_doc.model_describers.jms.bazinga_hateoas'] = new \Nelmio\ApiDocBundle\ModelDescriber\BazingaHateoasModelDescriber(($container->privates['hateoas.configuration.metadata_factory'] ?? $container->load('getHateoas_Configuration_MetadataFactoryService')), new \Nelmio\ApiDocBundle\ModelDescriber\JMSModelDescriber(($container->privates['jms_serializer.traceable_metadata_factory'] ?? $container->load('getJmsSerializer_TraceableMetadataFactoryService')), ($container->privates['annotations.reader'] ?? $container->getAnnotations_ReaderService()), [0 => 'json'], NULL, false, ($container->services['jms_serializer.serialization_context_factory'] ??= new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory())));
    }
}
